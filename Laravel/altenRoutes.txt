Necessary steps: create 5 roles: id:5->title:Super Admin,id:4 -> Admin,id:3 Υπάλληλος, id:2 Διαχειριστής, id:1  Πελάτης


https://alten.aristech.gr/api/v1/signup -> temporary for creating super admin ->method Post
https://alten.aristech.gr/api/v1/login -> method POST
https://alten.aristech.gr/api/v1//logout -->get method
https://alten.aristech.gr/api/v1/user -> get method
-----------------------------------------------------------------------------------------------------------
-USERS

Create new user:

url : https://alten.aristech.gr/api/v1/users
method: POST
send in body:
{

	  "lastname":"required must be string",
          "firstname":"required must be string",
          "email":"required, must be string and unique among users",
          "password":"required must be string",
          "password_confirmation:"required must be string"
          "role_id":"required must be integer, roles are 5 with highest 5(the super admin) and lowest the 1(client) ",
          "active":"nullable must be boolean.If null the default value is active",
          "manager_id" : "nullable, in case it is filled must be integer. If the created user is a manager, his id must also be matched here",
          "client_id" : "nullable, in case it is filled must be integer. If the created user is a manager, his id must also be matched here",
          "telephone" : "nullable must be string",
          "telephone2' : "nullable must be string",
          "mobile" : "nullable must be string"
}

note:if all 3 phone fields are empty the user wont be created and the system will display error message

Get all users:

https://alten.aristech.gr/api/v1/users
method:GET
send in body: NONE


Edit existing user:

https://alten.aristech.gr/api/v1/users
method:PUT
send in body:
{
	  "id": "required must be integer"
	  "lastname":"required must be string",
      "firstname":"required must be string",
          "email":"required, must be string and unique among users",
          "password":"required must be string",
          "password_confirmation:"required must be string"
          "role_id":"required must be integer, roles are 5 with highest 5(the super admin) and lowest the 1(client) ",
          "active":"nullable must be boolean.If null the default value is active",
          "manager_id" : "nullable, in case it is filled must be integer. If the created user is a manager, his id must also be matched here",
          "client_id" : "nullable, in case it is filled must be integer. If the created user is a manager, his id must also be matched here",
          "telephone" : "nullable must be string",
          "telephone2' : "nullable must be string",
          "mobile" : "nullable must be string"
}

note:if all 3 phone fields are empty the user wont be created and the system will display error message


delete user :

https://alten.aristech.gr/api/v1/users
method:DELETE
send in body:
{
    "id":"integer required"
}
--------------------------------------------------------------------------------------------------------------------------
- Roles:

https://alten.aristech.gr/api/v1/roles
method:GET
body: NONE

--------------------------------------------------------------------------------------------------
- DamageTypes(Because they want to be able to not only insert new damages but also select from previous inserted):

Insert new damage type:

url : https://alten.aristech.gr/api/v1/damagetypes
method:POST
send in body: { "name":"it must be string"}

Get all damage types:

url : https://alten.aristech.gr/api/v1/damagetypes
method:GET
send in body: NO

Delete damage type:
url : https://alten.aristech.gr/api/v1/damagetypes
method:DELETE
send in body: { "id":"it must be integer"  }

-------------------------------------------------------------------------------------------------------
- Damages:

Get all (not completed)damages:

url : https://alten.aristech.gr/api/v1/damages
method:GET
send in body:{ NONE  }

Get all  completed & cancelled damages:

url : https://alten.aristech.gr/api/v1/damagehistory
method:GET
send in body:{ NONE  }

Insert new damage:

url: https://alten.aristech.gr/api/v1/damages
method: POST
send in body:
{
	        "damage_type_id" : "it must be an integer and it is mandatory",
            "damage_comments": "not needed, can be null. If comments are needed they must be from 4 to 10000 characters",
            "cost" : "it can be null but if you insert value it has to be float and between 0.00 and 999999.99",
            "guarantee" : "it can be null but its value must be boolean',
            "status" : "status is mandatory and must be string.The statuses that we need as strings are Ολοκληρωμένη, Μη Ολοκληρωμένη, Ακυρώθηκε.",
            "client_id" : "it is required and it must be integer.Must be part an id of the clients table",
            "comments" : "it can be null but if filled it must be between 4 and 100000 characters",
            "manufacturer_id":"it is required and it is id",
            "mark_id": 'required and integer',
	        "device_id" : "it is required and must be an integer",
            "appointment_start":"nullable, it must be DateTime format",
            "appointment_end":"nullable, it must be DateTime format",
           "techs(The array can be null)":[
                {"tech_id:"to id"},
                {.....}

            ],
}

Update damages:
url: https://alten.aristech.gr/api/v1/damages
method: PUT
send in body:

{
        "damage_type_id" : "it must be an integer and it is mandatory",
        "damage_comments": "not needed, can be null. If comments are needed they must be from 4 to 10000 characters",
        "cost" : "it can be null but if you insert value it has to be float and between 0.00 and 999999.99",
        "guarantee" : "it can be null but its value must be boolean',
        "status" : "status is mandatory and must be string.The statuses that we need as strings are Ολοκληρωμένη, Μη Ολοκληρωμένη, Ακυρώθηκε.",
	    "appointment_pending":"required must be boolean",
   	    "technician_left":"required must be boolean",
        "technician_arrived":"required must be boolean",
        "appointment_completed":"required must be boolean",
        "appointment_needed":"required must be boolean",
        "supplement_pending": "required must be boolean",
        "completed_no_transaction":"required must be boolean",
        "damage_fixed":"required must be boolean",
	    "client_id" : "it is required and it must be integer.Must be part an id of the clients table",
	    "manufacturer_id":"it is required and it is id",
        "mark_id": 'required and integer',
	    "device_id" : "it is required and must be an integer",
	    "comments" : "it can be null but if filled it must be between 4 and 100000 characters",
	    "appointment_start":"nullable, it must be DateTime format",
	    "appointment_end":"nullable, it must be DateTime format",
	    "techs(The array can be null)":[
                {"tech_id:"to id"},
                {.....}

            ],

}

Delete damages:
url: https://alten.aristech.gr/api/v1/damages
method:DELETE
send in body
{
	"id":"integer|mandatory"

}



----------------------------------------------------------------------------------------------------------
- Technicians

Get Technicians:

url: https://alten.aristech.gr/api/v1/tech
method:GET
body:NONE

the results will be users with role_id = 3

Create technicians :
The technician will be created by creating user with role_id = 3.
See create user on top of text
-------------------------------------------------------------------------------------------------------------
Search

-Search clients
url: https://alten.aristech.gr/api/v1/searchclients
Method:POST
send in body
{
	"name":"string,can be null"
}

-Search managers
url: https://alten.aristech.gr/api/v1/searchmanagers
Method:POST
send in body
{
	"name":"string,can be null"
}

-Search technicians
url: https://alten.aristech.gr/api/v1/searchtechs
Method:POST
send in body
{
	"name":"string,can be null"
}

-Search manufacturers
url: https://alten.aristech.gr/api/v1/searchmanu
Method:POST
send in body
{
	"name":"string,can be null"
}

-Search marks
url: https://alten.aristech.gr/api/v1/searchmarks
Method:POST
send in body
{
	"name":"string,can be null"
}

-Search devices
url: https://alten.aristech.gr/api/v1/searchdevices
Method:POST
send in body
{
	"name":"string,can be null"
}

-Search damagetypes
url: https://alten.aristech.gr/api/v1/searchdamagetypes
Method:POST
send in body
{
	"name":"string,can be null"
}
---------------------------------------------------------------------------------------
Clients

- Create Client
url : https://alten.aristech.gr/api/v1/clients
method : POST
content on body
{
    "lastname":"string required",
    "firstname":"string required",
    "afm":"string nullable",
    "doy": "string nullable",
    "arithmos_gnostopoihshs":"" ,
    "arithmos_meletis":"nullable|string" ,
    "arithmos_hkasp" "nullable|string",
    "arithmos_aitisis' => "nullable|string",
    "plithos_diamerismaton" :"nullable|string",
    "dieuthinsi_paroxis" :"nullable|string",
    "kw_oikiako" : "nullable|string",
    "kw":"nullable|string",
    "levitas" : "nullable|string",
    "telephone":  "string nullable",
    "telephone2": "string nullable",
    "mobile":"string nullable",
    "address": "string required",
    "zipcode":"string required",
    "location":"string required",
    "email":"nullable string"
    "level" : "nullable string"
    "manager_id" : "nullable integer"

}

- Update Client
url : https://alten.aristech.gr/api/v1/clients
method : PUT
content on body
{
    "id": "required integer",
    "lastname":"string required",
    "firstname":"string required",
    "afm":"string nullable",
    "doy": "string nullable",
    "arithmos_gnostopoihshs":"" ,
    "arithmos_meletis":"nullable|string" ,
    "arithmos_hkasp" "nullable|string",
    "arithmos_aitisis' => "nullable|string",
    "plithos_diamerismaton" :"nullable|string",
    "dieuthinsi_paroxis" :"nullable|string",
    "kw_oikiako" : "nullable|string",
    "kw":"nullable|string",
    "levitas" : "nullable|string",
    "telephone":  "string nullable",
    "telephone2": "string nullable",
    "mobile":"string nullable",
    "address": "string required",
    "zipcode":"string required",
    "location":"string required",
    "email":"nullable string"
    "level" : "nullable string"
    "manager_id" : "nullable integer"

}

- Delete Client
url : https://alten.aristech.gr/api/v1/clients
method : DELETE
content on body
{
    "id": "required integer"
}

-Get all clients
url : https://alten.aristech.gr/api/v1/clients
method : GET
content on body : NONE
-------------------------------------------------------------------------------------------------------------------------------------------
FILE MANAGEMENT

-GET all files
url: https://alten.aristech.gr/api/v1/files/{The id of the client}
body: NONE
method: GET
returns an Array of objects:
{
    data:[
        {
            "file":"download link for pdf.works with Download pdf. In case of image is a blob",
            "filename":"the name of the file(with its extension)",
            "type":"the type of file.Values are jpeg, png, pdf"
        },
        {
            .....
        }
    ]
}

- Insert new files via Scan
url: https://alten.aristech.gr/api/v1/files/{The id of the client}
method:POST
body:
[
    {
        "file":"<The blob from UI>",
        "filename":"<The name of the file>"
    },
        "file":"..",
        "filename":".."
    },
    .....
]

- Download pdf
url: https://alten.aristech.gr/api/v1/files/{The Id of the client}/{filename}
method:GET
Downloads the pdf file


- Upload Files
url: https://alten.aristech.gr/api/v1/files/{ClientID}/upload
method:POST
Form data with key name File and value the file to be uploaded
------------------------------------------------------------------------------------------------------------------------
- Services:

Get all (not completed)services:

url : https://alten.aristech.gr/api/v1/services
method:GET
send in body:{ NONE  }

Get all  completed & cancelled services:

url : https://alten.aristech.gr/api/v1/servicehistory
method:GET
send in body:{ NONE  }

Insert new service:

url: https://alten.aristech.gr/api/v1/services
method: POST
send in body:
{
	        "service_type_id" : "it must be an integer and it is mandatory",
            "damage_comments": "not needed, can be null. If comments are needed they must be from 4 to 10000 characters",
            "cost" : "it can be null but if you insert value it has to be float and between 0.00 and 999999.99",
            "guarantee" : "it can be null but its value must be boolean',
            "status" : "status is mandatory and must be string.The statuses that we need as strings are Ολοκληρωμένο,Μη Ολοκληρωμένο,Ακυρώθηκε",
            "client_id" : "it is required and it must be integer.Must be part an id of the clients table",
            "comments" : "it can be null but if filled it must be between 4 and 100000 characters",
            "manufacturer_id":"it is required and it is id",
            "mark_id": 'required and integer',
	        "device_id" : "it is required and must be an integer",
            "appointment_start":"nullable, it must be DateTime format",
            "appointment_end":"nullable, it must be DateTime format",
            "techs(The array can be null)":[
                {"tech_id:"to id"},
                {.....}

            ],
            "repeatable" :"required must be boolean",
            "frequency": "nullable but if frequency is true is required"
}

Update services:
url: https://alten.aristech.gr/api/v1/services
method: PUT
send in body:

{
        "id":"integer required"
        "service_type_id" : "it must be an integer and it is mandatory",
        "service_comments": "not needed, can be null. If comments are needed they must be from 4 to 10000 characters",
        "cost" : "it can be null but if you insert value it has to be float and between 0.00 and 999999.99",
        "guarantee" : "it can be null but its value must be boolean',
        "status" : "status is mandatory and must be string.The statuses that we need as strings are Ολοκληρωμένο,Μη Ολοκληρωμένο,Ακυρώθηκε",
	    "appointment_pending":"required must be boolean",
   	    "technician_left":"required must be boolean",
        "technician_arrived":"required must be boolean",
        "appointment_completed":"required must be boolean",
        "appointment_needed":"required must be boolean",
        "supplement_pending": "required must be boolean",
        "completed_no_transaction":"required must be boolean",
        "service_done":"required must be boolean",
	    "client_id" : "it is required and it must be integer.Must be part an id of the clients table",
	    "manufacturer_id":"it is required and it is id",
        "mark_id": 'required and integer',
	    "device_id" : "it is required and must be an integer",
	    "comments" : "it can be null but if filled it must be between 4 and 100000 characters",
	    "appointment_start":"nullable, it must be DateTime format",
	    "appointment_end":"nullable, it must be DateTime format",
	    "techs(The array can be null)":[
                {"tech_id:"to id"},
                {.....}

            ],
        "repeatable" :"required must be boolean",
        "frequency": "nullable but if frequency is true is required"

}

Delete services:
url: https://alten.aristech.gr/api/v1/services
method:DELETE
send in body
{
	"id":"integer|mandatory"

}
------------------------------------------------------------------------------------------------------------------------
- Events:

Get all (not completed)Events:

url : https://alten.aristech.gr/api/v1/events
method:GET
send in body:{ NONE  }

Get all  completed & cancelled events:

url : https://alten.aristech.gr/api/v1/eventhistory
method:GET
send in body:{ NONE  }

Insert new event:

url: https://alten.aristech.gr/api/v1/events
method: POST
send in body:
{
	        'title' => 'required must be string',
            'status' => 'requiredbut be string. Acceptable Values Ολοκληρωμένο,Μη Ολοκληρωμένο,Ακυρώθηκε',
            'description' => 'nullable|min:4|max:10000',
            'comments' => 'nullable|min:4|max:10000'
}

Update events:
url: https://alten.aristech.gr/api/v1/events
method: PUT
send in body:

{
        "id":"the event id",
        'title' => 'required must be string',
        'status' => 'requiredbut be string. Acceptable Values Ολοκληρωμένο,Μη Ολοκληρωμένο,Ακυρώθηκε',
        'description' => 'nullable|min:4|max:10000',
        'comments' => 'nullable|min:4|max:10000'

}

Delete events:
url: https://alten.aristech.gr/api/v1/events
method:DELETE
send in body
{
	"id":"integer|mandatory"

}
-------------------------------------------------------------------------------------------
Calendar
Post:
"Calendar is set automatically according to the statuses of damages, services and events
GET:
https://alten.aristech.gr/api/v1/calendar
-----------------------------------------------------------------------------------------------
Supplements

GET
https://alten.aristech.gr/api/v1/supplements

returns supplements for appointments occuring in current week
------------------------------------------------------------------------------------------------
Display by url(All types of display use GET method)

Display specific Client:
https://alten.aristech.gr/api/v1/clients/{client-id}

Display specific Manager:
https://alten.aristech.gr/api/v1/managers/{manager-id}

Display specific Damage:
https://alten.aristech.gr/api/v1/damages/{damage-id}

Display specific Event:
https://alten.aristech.gr/api/v1/events/{event-id}

Display specific Service:
https://alten.aristech.gr/api/v1/services/{service_id}







